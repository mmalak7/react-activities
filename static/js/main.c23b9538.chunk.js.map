{"version":3,"sources":["components/TodoComponents/TodoForm/TodoForm.js","components/TodoComponents/Todo/Todo.js","components/TodoComponents/TodoList/TodoList.js","App.js","index.js"],"names":["TodoForm","props","className","type","name","placeholder","onChange","inputChangeHandler","onClick","addTask","removeCompleted","Todo","Grid","item","xs","lg","md","Card","CardContent","Typography","color","variant","component","todo","task","CardActions","id","key","event","toogleCompleted","TodoList","container","spacing","todos","map","App","useState","setTodos","setTodo","saveLocalStorage","localStorage","setItem","JSON","stringify","useEffect","hasOwnProperty","value","getItem","parse","error","console","log","getLocalStorage","target","preventDefault","newTask","Date","now","completed","newTodos","filter","itemId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAqBeA,EAnBE,SAACC,GAChB,OACE,yBAAKC,UAAU,gBACb,8BACE,2BACEC,KAAK,OACLC,KAAK,OACLC,YAAY,cACZC,SAAUL,EAAMM,qBAElB,yBAAKL,UAAU,mBACb,4BAAQA,UAAU,aAAaM,QAASP,EAAMQ,SAA9C,YACA,4BAAQP,UAAU,aAAaM,QAASP,EAAMS,iBAA9C,yB,wCCiBKC,EAxBF,SAACV,GACZ,OACE,kBAACW,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC3B,kBAACC,EAAA,EAAD,CAAMf,UAAU,wBACd,kBAACgB,EAAA,EAAD,CAAahB,UAAU,gBACrB,kBAACiB,EAAA,EAAD,CAAYC,MAAM,iBAAlB,eACA,kBAACD,EAAA,EAAD,CAAYE,QAAQ,KAAKC,UAAU,MAChCrB,EAAMsB,KAAKC,MAEd,kBAACC,EAAA,EAAD,KACE,2BACEC,GAAG,UACHC,IAAK1B,EAAMsB,KAAKG,GAChBlB,QAAS,SAACoB,GAAD,OAAW3B,EAAM4B,gBAAgB5B,EAAMsB,KAAKG,KACrDvB,KAAK,aAEP,gDClBC2B,EAAW,SAAC7B,GACvB,OACE,kBAACW,EAAA,EAAD,CAAMmB,WAAS,EAACC,QAAS,EAAG9B,UAAU,gBACnCD,EAAMgC,MAAMC,KAAI,SAACX,EAAMG,GAAP,OACf,kBAAC,EAAD,CAAMH,KAAMA,EAAMI,IAAKD,EAAIG,gBAAiB5B,EAAM4B,uB,MC4E3CM,MAhFf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNH,EADM,KACCI,EADD,OAEWD,mBAAS,IAFpB,mBAENb,EAFM,KAEAe,EAFA,KA6BPC,EAAmB,WACvBC,aAAaC,QAAQ,QAASC,KAAKC,UAAUV,KAkC/C,OA/BAW,qBAAU,YAlBc,WACtB,IAAK,IAAIjB,KAAOa,aACd,GAAIA,aAAaK,eAAelB,GAAM,CACpC,IAAImB,EAAQN,aAAaO,QAAQpB,GACjC,IACEmB,EAAQJ,KAAKM,MAAMF,GACnBT,EAASS,GACT,MAAOG,GACPC,QAAQC,IAAIF,KAWlBG,KACC,IAEHR,qBAAU,WACRL,MACC,CAACA,IA0BF,yBAAKrC,UAAU,OACb,mEACA,kBAAC,EAAD,CACE+B,MAAOA,EACPa,MAAOvB,EACPhB,mBA7BqB,SAACqB,GAC1BU,EAAQV,EAAMyB,OAAOP,QA6BjBrC,QAnEU,SAACmB,GACfA,EAAM0B,iBACN,IAAIC,EAAU,CACZ/B,KAAMD,EACNG,GAAI8B,KAAKC,MACTC,WAAW,GAEbrB,EAAS,GAAD,mBAAKJ,GAAL,CAAYsB,KACpBjB,EAAQ,KA4DJ5B,gBAhBkB,SAACkB,GACvBA,EAAM0B,iBACN,IAAMK,EAAW1B,EAAM2B,QAAO,SAACrC,GAC7B,OAAQA,EAAKmC,aAEfrB,EAASsB,MAcP,kBAAC,EAAD,CAAU1B,MAAOA,EAAOJ,gBA9BJ,SAACgC,GACvB,IAAMF,EAAW1B,EAAMC,KAAI,SAACX,GAI1B,OAHIA,EAAKG,KAAOmC,IACdtC,EAAKmC,WAAanC,EAAKmC,WAElBnC,KAETc,EAASsB,GACTrB,EAAQ,S,MCrDZwB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.c23b9538.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst TodoForm = (props) => {\r\n  return (\r\n    <div className=\"form-wrapper\">\r\n      <form>\r\n        <input\r\n          type=\"text\"\r\n          name=\"todo\"\r\n          placeholder=\"what to do?\"\r\n          onChange={props.inputChangeHandler}\r\n        />\r\n        <div className=\"buttons-wrapper\">\r\n          <button className='button-add' onClick={props.addTask}>add task</button>\r\n          <button className='button-del' onClick={props.removeCompleted}> remove completed</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoForm;\r\n","import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst Todo = (props) => {\r\n  return (\r\n    <Grid item xs={4} lg={2} md={2} >\r\n      <Card className=\"list-element-wrapper\">\r\n        <CardContent className=\"card-content\">\r\n          <Typography color=\"textSecondary\">just simple</Typography>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n            {props.todo.task}\r\n          </Typography>\r\n          <CardActions>\r\n            <input\r\n              id=\"toCheck\"\r\n              key={props.todo.id}\r\n              onClick={(event) => props.toogleCompleted(props.todo.id)}\r\n              type=\"checkbox\"\r\n            />\r\n            <label>Complete</label>\r\n          </CardActions>\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport Todo from \"../Todo/Todo\";\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nexport const TodoList = (props) => {\r\n  return (\r\n    <Grid container spacing={6} className='list-wrapper'>\r\n      {props.todos.map((todo, id) => (\r\n        <Todo todo={todo} key={id} toogleCompleted={props.toogleCompleted} />\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport TodoForm from \"./components/TodoComponents/TodoForm/TodoForm\";\nimport { TodoList } from \"./components/TodoComponents/TodoList/TodoList\";\nimport \"./App.scss\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [todo, setTodo] = useState(\"\");\n\n  const addTask = (event) => {\n    event.preventDefault();\n    let newTask = {\n      task: todo,\n      id: Date.now(),\n      completed: false,\n    };\n    setTodos([...todos, newTask]);\n    setTodo(\"\");\n  };\n\n  const getLocalStorage = () => {\n    for (let key in localStorage) {\n      if (localStorage.hasOwnProperty(key)) {\n        let value = localStorage.getItem(key);\n        try {\n          value = JSON.parse(value);\n          setTodos(value);\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    }\n  };\n\n  const saveLocalStorage = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n\n  useEffect(() => {\n    getLocalStorage();\n  }, []);\n\n  useEffect(() => {\n    saveLocalStorage();\n  }, [saveLocalStorage]);\n\n  const inputChangeHandler = (event) => {\n    setTodo(event.target.value);\n  };\n\n  const toogleCompleted = (itemId) => {\n    const newTodos = todos.map((todo) => {\n      if (todo.id === itemId) {\n        todo.completed = !todo.completed;\n      }\n      return todo;\n    });\n    setTodos(newTodos);\n    setTodo(\"\");\n  };\n\n  const removeCompleted = (event) => {\n    event.preventDefault();\n    const newTodos = todos.filter((todo) => {\n      return !todo.completed;\n    });\n    setTodos(newTodos);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>What activity would you like to do?</h1>\n      <TodoForm\n        todos={todos}\n        value={todo}\n        inputChangeHandler={inputChangeHandler}\n        addTask={addTask}\n        removeCompleted={removeCompleted}\n      />\n\n      <TodoList todos={todos} toogleCompleted={toogleCompleted} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './main.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}